on:
  pull_request:
    types: [opened]
name:  pull request working branch
jobs:
  web-deploy:
    name: Pull request
    runs-on: ubuntu-latest
    steps:
      - name: Node Js
        uses: actions/setup-node@v1

      - name: ðŸšš Get latest code
        uses: actions/checkout@v2

      - name: Set branch name env
        id: step_one
        run: |
          echo "branch_name=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV

      - name: Get branch number
        uses: bhowell2/github-substring-action@v1.0.0
        id: one
        with:
          value: ${{ env.branch_name }}
          index_of_str: "mp-"

      - name: Set branch number env
        id: step_one2
        run: |
          echo "branch_number=${{ steps.one.outputs.substring}}" >> $GITHUB_ENV

      - name: Set port by pr number env
        id: step_one22
        run: |
          echo "APP_PORT=10${{ github.event.pull_request.number}}" >> $GITHUB_ENV

      - name: Show vars
        id: step_two
        run: |
          echo "branch_name - ${{ env.branch_name }}, branch_number - ${{ env.branch_number }}" 
          echo "substring  - ${{ steps.one.outputs.substring }} " 
          echo "PORT  - ${{ env.APP_PORT }}" 
          
      - name: 'Create env file'
        run: |
          ls
          touch .env
          echo API_ENDPOINT="https://xxx.execute-api.us-west-2.amazonaws.com" >> .env
          echo API_KEY="API-KEY" >> .env
          echo PORT=${{ env.APP_PORT }} >> .env
          cat .env

      - name: 'Create htaccess file'
        run: |
          touch .htaccess
          echo RewriteEngine On >> .htaccess
          echo "RewriteRule ^(.*)$ http://127.0.0.1:${{ env.APP_PORT }}/\$1 [P,L]" >> .htaccess
          cat .htaccess

      - name: Get Token
        run: | 
          curl --location --request GET 'https://cpanel19.d.fozzy.com:2083/execute/SubDomain/addsubdomain?domain=${{env.branch_name}}&rootdomain=test-metall.site&dir=/stages/${{ github.event.pull_request.head.ref }}' --header 'Authorization: cpanel vychevs2:GVJV33J98LLRDASZU5A9JPGVMYI87RU1'

      - name: ðŸ“‚ Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.3.2
        with:
          server: ftp.test-metall.site
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          server-dir: ./stages/${{env.branch_name}}/
          exclude: |
            **/.github/**
            **/.git*
            **/.git*/**
            **/node_modules/**

      - name: multiple command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            export PATH="/usr/local/cpanel/3rdparty/lib/path-bin:/opt/perl/5.32/bin:/usr/local/cpanel/3rdparty/lib/path-bin:/usr/local/jdk/bin:/usr/kerberos/sbin:/usr/kerberos/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/usr/X11R6/bin:/usr/local/bin:/usr/X11R6/bin:/root/bin:/opt/bin:/opt/cpanel/composer/bin:/opt/dell/srvadmin/bin:/home/vychevs2/.local/bin:/home/vychevs2/bin"
            cd ./stages/${{env.branch_name}}/
            cd ~/bin
            ls
            ~/bin/npm -v
            echo $PATH

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host staging
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USERNAME }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}

      - name: Check out the source

        run: ssh staging 'cd ./stages/${{env.branch_name}}/ && ls && node -v && npm install && node ./src/app.js'


